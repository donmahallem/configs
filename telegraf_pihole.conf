
[agent]
  interval = "20s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "2s"
  flush_interval = "5m"
  flush_jitter = "0s"

  precision = ""

  ## Override default hostname, if empty use os.Hostname()
  #hostname = "pihole"
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false
[[inputs.http]]
  ## One or more URLs from which to read formatted metrics
  urls = [
    "$PIHOLE_SOURCE/admin/api.php"
  ]
  name_override = "pihole_source"
  data_format = "json"
  tagexclude = ["url"]
  fielddrop  = ["gravity_last_updated_relative*"]
#[[processors.converter]]
#  [processors.converter.fields]
#    integer = ["queries_*","unique_*","reply_*","gravity_last_updated_absolute","ads_blocked_today","domains_being_blocked","dns_queries_all_types","clients_ever_seen","dns_queries_today","dns_queries_all_types","privacy_level"]
[[processors.clone]]
  order = 1
  namepass = ["pihole_source"]
  name_override ="pihole_meta"
[[processors.clone]]
  order = 2
  namepass = ["pihole_source"]
  name_override ="pihole_clients"
[[processors.clone]]
  order = 3
  namepass = ["pihole_source"]
  name_override ="pihole_replies"
[[processors.clone]]
  order = 3
  namepass = ["pihole_source"]
  name_override ="pihole_status"
[[processors.converter]]
  order = 4
  namepass = ["pihole_meta"]
  fieldpass = ["gravity_last_updated_absolute","privacy_level","domains_being_blocked"]
  [processors.converter.fields]
    integer = ["gravity_last_updated_absolute","privacy_level","domains_being_blocked"]
[[processors.converter]]
  order = 5
  namepass = ["pihole_status"]
  fielddrop = ["gravity_last_updated_absolute","privacy_level","unique_clients","clients_ever_seen","reply_*","domains_being_blocked"]
  [processors.converter.fields]
    integer = ["queries_*","unique_*","ads_blocked_today","dns_queries_all_types","clients_ever_seen","dns_queries_today","dns_queries_all_types"]



[[processors.converter]]
  order = 6
  namepass = ["pihole_clients"]
  fieldpass = ["unique_clients","clients_ever_seen"]
  [processors.converter.fields]
    integer = ["unique_clients","clients_ever_seen"]
[[processors.converter]]
  order = 7
  namepass = ["pihole_replies"]
  fieldpass = ["reply_*"]
  [processors.converter.fields]
    integer = ["reply_*"]
[[processors.dedup]]
  order = 8
  namepass = ["pihole_status","pihole_clients","pihole_replies"]
  dedup_interval = "600s"
[[processors.dedup]]
  order = 9
  namepass = ["pihole_meta"]
  dedup_interval = "3600s"
[[processors.rename]]
  order = 10
  namepass = ["pihole_replies"]
  [[processors.rename.replace]]
    field = "reply_IP"
    dest = "ip"
  [[processors.rename.replace]]
    field = "reply_CNAME"
    dest = "cname"
  [[processors.rename.replace]]
    field = "reply_NXDOMAIN"
    dest = "nxdomain"
  [[processors.rename.replace]]
    field = "reply_NODATA"
    dest = "nodata"
[[outputs.file]]
  namepass = ["pihole_status","pihole_clients","pihole_replies","pihole_meta"]
  files = ["stdout"]

[[outputs.influxdb_v2]]
    #name_override = "output_influxdb2_systemstats"
  namepass = ["pihole_status","pihole_clients","pihole_replies","pihole_meta"]
  urls = ["$INFLUX_ENDPOINT"]
#
#   ## Token for authentication.
  token = "$INFLUX_TOKEN"
#
#   ## Organization is the name of the organization you wish to write to; must exist.
  organization = "$INFLUX_ORG_NAME"
#
#   ## Destination bucket to write into.
  bucket = "$INFLUX_BUCKET_NAME"
#   ## Timeout for HTTP messages.
  timeout = "5s"
  user_agent = "telegraf"
